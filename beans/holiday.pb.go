// Code generated by protoc-gen-go.
// source: holiday.proto
// DO NOT EDIT!

/*
Package beans is a generated protocol buffer package.

It is generated from these files:
	holiday.proto

It has these top-level messages:
	Holiday
	Results
	Fields
	Records
*/
package beans

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Holiday struct {
	Success bool     `protobuf:"varint,1,opt,name=Success"          json:"success,omitempty"          xml:"success,omitempty"`
	Result  *Results `protobuf:"bytes,2,opt,name=Result"            json:"result,omitempty"           xml:"result,omitempty"`
}

func (m *Holiday) Reset()                    { *m = Holiday{} }
func (m *Holiday) String() string            { return proto.CompactTextString(m) }
func (*Holiday) ProtoMessage()               {}
func (*Holiday) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Holiday) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *Holiday) GetResult() *Results {
	if m != nil {
		return m.Result
	}
	return nil
}

type Results struct {
	ResourceID string     `protobuf:"bytes,3,opt,name=ResourceID"        json:"resource_id,omitempty"      xml:"resource_id,omitempty"`
	Limit      int64      `protobuf:"varint,4,opt,name=Limit"            json:"limit,omitempty"            xml:"limit,omitempty"`
	Total      int64      `protobuf:"varint,5,opt,name=Total"            json:"total,omitempty"            xml:"total,omitempty"`
	Field      []*Fields  `protobuf:"bytes,6,rep,name=Field"             json:"fields,omitempty"           xml:"fields,omitempty"`
	Record     []*Records `protobuf:"bytes,9,rep,name=Record"            json:"records,omitempty"          xml:"records,omitempty"`
}

func (m *Results) Reset()                    { *m = Results{} }
func (m *Results) String() string            { return proto.CompactTextString(m) }
func (*Results) ProtoMessage()               {}
func (*Results) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Results) GetResourceID() string {
	if m != nil {
		return m.ResourceID
	}
	return ""
}

func (m *Results) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *Results) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Results) GetField() []*Fields {
	if m != nil {
		return m.Field
	}
	return nil
}

func (m *Results) GetRecord() []*Records {
	if m != nil {
		return m.Record
	}
	return nil
}

type Fields struct {
	Type string `protobuf:"bytes,7,opt,name=Type"              json:"type,omitempty"             xml:"type,omitempty"`
	ID   string `protobuf:"bytes,8,opt,name=ID"                json:"id,omitempty"               xml:"id,omitempty"`
}

func (m *Fields) Reset()                    { *m = Fields{} }
func (m *Fields) String() string            { return proto.CompactTextString(m) }
func (*Fields) ProtoMessage()               {}
func (*Fields) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Fields) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Fields) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type Records struct {
	Date            string `protobuf:"bytes,10,opt,name=Date"             json:"date,omitempty"             xml:"date,omitempty"`
	Name            string `protobuf:"bytes,11,opt,name=Name"             json:"name,omitempty"             xml:"name,omitempty"`
	IsHoliday       string `protobuf:"bytes,12,opt,name=IsHoliday"        json:"isHoliday,omitempty"        xml:"isHoliday,omitempty"`
	HolidayCategory string `protobuf:"bytes,13,opt,name=HolidayCategory"  json:"holidayCategory,omitempty"  xml:"holidayCategory,omitempty"`
	Description     string `protobuf:"bytes,14,opt,name=Description"      json:"description,omitempty"      xml:"description,omitempty"`
}

func (m *Records) Reset()                    { *m = Records{} }
func (m *Records) String() string            { return proto.CompactTextString(m) }
func (*Records) ProtoMessage()               {}
func (*Records) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Records) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *Records) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Records) GetIsHoliday() string {
	if m != nil {
		return m.IsHoliday
	}
	return ""
}

func (m *Records) GetHolidayCategory() string {
	if m != nil {
		return m.HolidayCategory
	}
	return ""
}

func (m *Records) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*Holiday)(nil), "beans.Holiday")
	proto.RegisterType((*Results)(nil), "beans.Results")
	proto.RegisterType((*Fields)(nil), "beans.Fields")
	proto.RegisterType((*Records)(nil), "beans.Records")
}

func init() { proto.RegisterFile("holiday.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 303 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0x41, 0x6a, 0xf3, 0x30,
	0x10, 0x85, 0x71, 0x12, 0xdb, 0xc9, 0xf8, 0x4f, 0x7e, 0x18, 0xba, 0x98, 0x45, 0x29, 0xc6, 0x85,
	0xa2, 0x45, 0xc9, 0x22, 0x3d, 0x42, 0x4d, 0xa9, 0x69, 0xe9, 0x42, 0xcd, 0x05, 0x14, 0x47, 0xb4,
	0x02, 0x27, 0x0a, 0x96, 0xb2, 0xc8, 0x59, 0xba, 0xeb, 0x49, 0x8b, 0x46, 0x2e, 0x09, 0xdd, 0xbd,
	0xf9, 0xde, 0x1b, 0xfb, 0x49, 0x82, 0xf9, 0xa7, 0xed, 0xcc, 0x56, 0x9d, 0x96, 0x87, 0xde, 0x7a,
	0x8b, 0xe9, 0x46, 0xab, 0xbd, 0xab, 0x5e, 0x20, 0x7f, 0x8e, 0x1c, 0x09, 0xf2, 0xf7, 0x63, 0xdb,
	0x6a, 0xe7, 0x28, 0x29, 0x13, 0x31, 0x95, 0xbf, 0x23, 0xde, 0x41, 0x26, 0xb5, 0x3b, 0x76, 0x9e,
	0x46, 0x65, 0x22, 0x8a, 0xd5, 0x62, 0xc9, 0xcb, 0xcb, 0x08, 0x9d, 0x1c, 0xdc, 0xea, 0x3b, 0x81,
	0x7c, 0x60, 0x78, 0x03, 0x20, 0xb5, 0xb3, 0xc7, 0xbe, 0xd5, 0x4d, 0x4d, 0xe3, 0x32, 0x11, 0x33,
	0x79, 0x41, 0xf0, 0x0a, 0xd2, 0x57, 0xb3, 0x33, 0x9e, 0x26, 0x65, 0x22, 0xc6, 0x32, 0x0e, 0x81,
	0xae, 0xad, 0x57, 0x1d, 0xa5, 0x91, 0xf2, 0x80, 0xb7, 0x90, 0x3e, 0x19, 0xdd, 0x6d, 0x29, 0x2b,
	0xc7, 0xa2, 0x58, 0xcd, 0x87, 0xdf, 0x33, 0x73, 0x32, 0x7a, 0xb1, 0x64, 0x6b, 0xfb, 0x2d, 0xcd,
	0x38, 0x75, 0x2e, 0x19, 0x20, 0x97, 0x0c, 0xa2, 0xba, 0x87, 0x2c, 0x2e, 0x22, 0xc2, 0x64, 0x7d,
	0x3a, 0x68, 0xca, 0xb9, 0x1c, 0x6b, 0x5c, 0xc0, 0xa8, 0xa9, 0x69, 0xca, 0x64, 0xd4, 0xd4, 0xd5,
	0x17, 0x1f, 0x89, 0xbf, 0x10, 0xf2, 0xb5, 0xf2, 0x9a, 0x20, 0xe6, 0x83, 0x0e, 0xec, 0x4d, 0xed,
	0x34, 0x15, 0x91, 0x05, 0x8d, 0xd7, 0x30, 0x6b, 0xdc, 0x70, 0xab, 0xf4, 0x8f, 0x8d, 0x33, 0x40,
	0x01, 0xff, 0x07, 0xf9, 0xa8, 0xbc, 0xfe, 0xb0, 0xfd, 0x89, 0xe6, 0x9c, 0xf9, 0x8b, 0xb1, 0x84,
	0xa2, 0xd6, 0xae, 0xed, 0xcd, 0xc1, 0x1b, 0xbb, 0xa7, 0x05, 0xa7, 0x2e, 0xd1, 0x26, 0xe3, 0xb7,
	0x7c, 0xf8, 0x09, 0x00, 0x00, 0xff, 0xff, 0xd6, 0x20, 0xda, 0xf8, 0xdc, 0x01, 0x00, 0x00,
}
